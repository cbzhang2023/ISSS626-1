---
title: "In-class_EX06"
author: "Zhang Chenbin"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
  cache: TRUE
format: 
  html:
    code-fold: true
---

```{r}
pacman::p_load(sf, sfdep, tmap, plotly, tidyverse, Kendall)
```

```{r}
hunan <- st_read(dsn = "data/geospatial",
                 layer = "Hunan")
```

```{r}
GDPPC <- read_csv("data/aspatial/Hunan_GDPPC.csv")
```

```{r}
GDPPC_st <- spacetime(GDPPC, hunan,
                      .loc_col = "County",
                      .time_col = "Year")
```

```{r}
is_spacetime_cube(GDPPC_st)
```

```{r}
GDPPC_nb <- GDPPC_st %>%
  activate("geometry") %>%
  mutate(nb = include_self(
    st_contiguity(geometry)),
    wt = st_inverse_distance(nb,
                             geometry,
                             scale = 1,
                             alpha = 1),
    .before = 1) %>%
  set_nbs("nb") %>%
  set_wts("wt")

```

```{r}
gi_stars <- GDPPC_nb %>%
  group_by(Year) %>%
  mutate(gi_star = local_gstar_perm(
    GDPPC, nb, wt)) %>%
  tidyr::unnest(gi_star)

```

```{r}
cbg <- gi_stars %>%
  ungroup() %>%
  filter(County == "Changsha") %>%
  select(County, Year, gi_star)
```

```{r}
ggplot(data = cbg,
       aes(x = Year, y = gi_star)) +
  geom_line() +
  theme_light()
```

```{r}
p <- ggplot(data = cbg,
            aes(x = Year, y = gi_star)) +
  geom_line() +
  theme_light()

ggplotly(p)

```

```{r}
cbg %>%
  summarise(mk = list(
    unclass(MannKendall(gi_star)))) %>%
  tidyr::unnest_wider(mk)

```

```{r}
ehsa <- gi_stars %>%
  group_by(County) %>%
  summarise(mk = list(
    unclass(Kendall::MannKendall(gi_star)))) %>%
  tidyr::unnest_wider(mk)

head(ehsa)

```

```{r}
emerging <- ehsa %>%
  arrange(sl, abs(tau)) %>%
  slice(1:10)

head(emerging)

```

```{r}
ehsa <- emerging_hotspot_analysis(
  x = GDPPC_st,
  .var = "GDPPC",
  k = 1,
  nsim = 99
)
```

```{r}
ggplot(data = ehsa,
       aes(x = classification)) +
  geom_bar()
```

```{r}
hunan_ehsa <- hunan %>%
  left_join(ehsa, by = join_by(County == location))
```

```{r}
ehsa_sig <- hunan_ehsa %>%
  filter(p_value < 0.05)
tmap_mode("plot")
tm_shape(hunan_ehsa) +
  tm_polygons() +
  tm_borders(alpha = 0.5) +
  tm_shape(ehsa_sig) +
  tm_fill("classification") +
  tm_borders(alpha = 0.4)
```
