---
title: "In-class_EX09"
author: "Zhang Chenbin"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
format: 
  html:
    code-fold: true
---

```{r}
pacman::p_load(sf, spdep, GWmodel, SpatialML, 
               tmap, rsample, Metrics, tidyverse)
```

```{r,eval=FALSE}
eldercare <- st_read(dsn = "data/HDB/rawdata",
                     layer = "ELDERCARE") %>%
  st_transform(crs = 3414)
```

```{r,eval=FALSE}
CHAS <- st_read("data/HDB/rawdata/CHASClinics.kml") %>%
  st_transform(crs = 3414)
```

```{r,eval=FALSE}
buffer_1km <- st_buffer(eldercare,
                        dist = 1000)
```

```{r}
# tmap_mode("view")
# tmap_shape(buffer_1km) +
#   tm_polygons() +
# tm_shape(CHAS) +
#   tm_dots()
```

```{r}
# buffer_1km$pts_count <- lengths(
#   st_intersects(buffer_1km, CHAS)
# )
```

```{r}
# mpsz <- st_read(dsn = "data/geospatial", layer = "MP14_SUBZONE_NO_SEA_PL") %>%
#   st_transform(3414)
# hexagons <- st_read(dsn = "data/geospatial", layer = "hexagons") %>%
#   st_transform(3414)  
# eldercare <- st_read(dsn = "data/geospatial", layer = "ELDERCARE") %>%
#   st_transform(3414)
# ODMatrix <- read_csv("data/aspatial/OD_Matrix.csv", skip = 0)
```

```{r}
# eldercare <- eldercare %>%
#   select(fid, ADDRESSPOS) %>%
#   mutate(capacity = 100)
```

```{r}
# hexagons <- hexagons %>%
#   select(fid) %>%
#   mutate(demand = 100)
```

```{r}
# distmat <- ODMatrix %>%
#   select(origin_id, destination_id, total_cost) %>%
#   spread(destination_id, total_cost) %>%
#   select(c(-c('origin_id)))
```

```{r}
# distmat_km <- as.matrix(distmat/1000)
```

```{r}
# acc_Hansen <- data.frame(ac(hexagons$demand,
#                             eldercare$capacity,
#                             distmat_km,
#                             #d0 = 50,
#                             power = 2,
#                             family = "Hansen"))
```

```{r}
# mapex <- st_bbox(hexagons)
# 
# tmap_mode("plot")
# tm_shape(hexagon_Hansen,
#          bbox = mapex) + 
#   tm_fill(col = "accHansen",
#           n = 10,
#           style = "quantile",
#           border.col = "black",
#           border.lwd = 1) +
# tm_shape(eldercare) +
#   tm_symbols(size = 0.1) +
#   tm_layout(main.title = "Accessibility to eldercare: Hansen method",
#             main.title.position = "center",
#             main.title.size = 2,
#             legend.outside = FALSE,
#             legend.height = 0.45, 
#             legend.width = 3.0,
#             legend.format = list(digits = 6),
#             legend.position = c("right", "top"),
#             frame = TRUE) +
#   tm_compass(type="8star", size = 2) +
#   tm_scale_bar(width = 0.15) +
#   tm_grid(lwd = 0.1, alpha = 0.5)
```

```{r}
# hexagon_Hansen <- st_join(hexagon_Hansen, mpsz, 
#                           join = st_intersects)
# 
# ggplot(data=hexagon_Hansen, 
#        aes(y = log(accHansen), 
#            x= REGION_N)) +
#   geom_boxplot() +
#   geom_point(stat="summary", 
#              fun.y="mean", 
#              colour ="red", 
#              size=2)
```

```{r}
# ggbetweenstats(data = hexagon_Hansen,
#                x = REGION_N,
#                y = acc_Hansen,
#                type = "P")
```
