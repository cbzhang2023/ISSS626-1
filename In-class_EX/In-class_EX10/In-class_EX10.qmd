---
title: "In-class_EX10"
author: "Zhang Chenbin"
execute: 
  eval: false
  echo: true
  warning: false
  freeze: true
format: 
  html:
    code-fold: true
---

```{r}
pacman::p_load(tidyverse, sf, tmap, httr, performance)
```

```{r}
realis_data <- read.csv("data/ResidentialTransaction20241110111743.csv")
condo_resale <- realis_data %>%
  mutate(`Sale.Date` = dmy(`Sale.Date`)) %>%
  filter(`Type.of.Sale` == "Resale" &
           `Property.Type` == "Condominium")
```

```{r}
postcode <- unique(condo_resale$`Postal.Code`)
```

```{r}
url <- "https://onemap.gov.sg/api/common/elastic/search"
found <- data.frame()
not_found <- data.frame()

for (postcode in postcode){
  query <- list('searchVal'=postcode, 'returnGeom'='Y', 
                'getAddrDetails'='Y', 'pageNum'='1')
  res <- GET(url, query=query)
  if ((content(res)$found)!=0){
    found <- rbind(found, data.frame(content(res))[4:13])
  } else {not_found = data.frame(postcode)
  }
}
```

```{r}
found <- found %>%
  select(c(6:8)) %>%
  rename(POSTAL = `results.POSTAL`,
         XCOORD = `results.X`,
         YCOORD = `results.Y`)
```

```{r}
condo_resale$Postal.Code <- as.character(condo_resale$Postal.Code)
result <- left_join(condo_resale, found, by = c("Postal.Code" = "POSTAL"))
```

```{r}
condo_resale$Postal.Code <- as.character(condo_resale$Postal.Code)
result <- left_join(condo_resale, found, by = c("Postal.Code" = "POSTAL"))
```

```{r}
overlapping_points <- condo_resale_sf %>%
  mutate(overlap = lengths(st_equals(., .)) > 1)
```

```{r}
condo_resale_sf <- condo_resale_sf %>%
  st_jitter(amount = 2)
```
